#!/usr/bin/env bash

export LC_ALL=C

# Check if user was root continue the script
if [[ $( id -u ) != 0 ]];then

     echo -e "\n >>     Can't install without root user permissions \n exiting"

    exit

fi

# Check the internet connection : you should be ONLINE
echo -e "\n    >>   Checking internet connection...."
ping_counter=0
while [ 1 ];do
    if [[ ! $( ping -c 3 8.8.8.8 ) ]];then
        echo  -e "    >>    Connection is not stable .... \n Check your connection..."
        sleep 5
        ((ping_counter++))
        echo $ping_counter
        if [ "$ping_counter" == "4" ];then
          echo "Exiting..."  
          exit
        fi
    else
        echo -e "  >>   Connection established! \n"
       break
      fi
done


# Provide pacman for first use :
pacman -Sy
pacman-key --init
pacman-key --populate archlinux

# Install tools for bootloader installation
echo -e "Installing needed tools ! \n"
if [ -d "/sys/firmware/efi"  ]; then
    echo "  >>   EFI detected! \n"
    pacman -S grub dosfstools efibootmgr os-prober --needed --noconfirm
    else
        pacman -S grub os-prober --needed --noconfirm
fi

clear

# Set password for root user
echo -e "Set a PASSWORD for root user : \n "
while [ 1 ]; do
  passwd   
  if [ ! $? == "0" ];then
      clear
      echo -e "Set a PASSWORD for root user : \n"
      passwd
    else
      break
    fi
  done

# Create a normal user
read -p  "Please enter a USERNAME : " USER_NAME_INPUT
useradd -m -g users  -G wheel,storage,power  -s $(which zsh) $USER_NAME_INPUT

# Set password for new normal user
echo -e "Set a PASSWORD for $USER_NAME_INPUT : "
while [ 1 ]; do
  passwd $USER_NAME_INPUT
    if [ ! $? == "0" ];then
      clear
      echo -e "Set a PASSWORD for $USER_NAME_INPUT : \n"
      passwd $USER_NAME_INPUT
    else
      break
    fi
  done
# Set timezone
echo -e "Find your timezone file\nPress ARROW KEYS to move and Press q to quit..."
rm -f /etc/localtime
ls -R /usr/share/zoneinfo | less
while [ 1 ];do
  read -p "Enter your selected region (e.g.:(/usr/share/zoneinfo/Iran)): " $SELECTED_REGION
  ln -sf  $SELECTED_REGION /etc/localtime
    if [ ! $? == "0" ];then
      clear
      echo -e "Entered Wrong path...\n"
    else
      break
    fi
  done
hwclock --systohc --utc

clear

# Set hostname for new system
echo -e "Setting hostname \n"
read -p "Please enter youre HOSTNAME : " HOST_NAME_INPUT
echo "$HOST_NAME_INPUT" > /etc/hostname

# Set locale for new system
echo -e "Setting locale \n"
sed -i 's/#en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/g' /etc/locale.gen
locale-gen

# Add permission for wheel users to run commands with sudo
echo -e "Edit /etc/sudoers (let wheel users to execute sudo!) \n"
sed -i 's/# %wheel ALL=(ALL) ALL/%wheel ALL=(ALL) ALL/g' /etc/sudoers

clear

# Install grub bootloader
echo -e "Start installing BootLoader(grub) \n"
if [ -d "/sys/firmware/efi" ]; then
    if [ -d "/boot/efi" ]; then
       echo -e "    >> EFI partition detected !\n"
       grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=arch_grub --recheck --debug --force
    elif [ -d "/boot/EFI" ]; then
      echo -e "    >> EFI partition detected !\n"
      grub-install --target=x86_64-efi --efi-directory=/boot/EFI --bootloader-id=arch_grub --recheck --debug --force
      else
        while [ 1 ]; do
            read -p "Where is esp (EFI) partition mounted (e.g.: /boot , /boot/esp) ? " EFI_MOUNTPOINT
            echo -e "   >> EFI partition is $EFI_MOUNTPOINT"
            if [ -d "$EFI_MOUNTPOINT" ];then
              grub-install --target=x86_64-efi --efi-directory=$EFI_MOUNTPOINT --bootloader-id=arch_grub --recheck --debug --force
              break
            else
              echo -e "You entered wrong EFI MOUNTPOINT \n"
            fi
          done
        fi
  else
    echo -e "    >> Legacy mode detected... !\n"
    read -p "On which device you want to  install BOOTLOADER ? (Default = /dev/sda) : " DEVICE_INPUT
    if [[ "$DEVICE_INPUT" != "/dev/sda" &&  ! -z "$DEVICE_INPUT" ]]; then
        grub-install --target=i386-pc --recheck $DEVICE_INPUT
        else
            grub-install --target=i386-pc --recheck /dev/sda
    fi
  fi
# Make initramfs
echo -e "Making initramfs \n"
read -p "Which KERNEL did you installed(linux or linux-zen or linux-hardened)? (Default = linux) : "  KERNEL_TYPE_INPUT
if [[ "$KERNEL_TYPE_INPUT" !=  "linux" &&  ! -z "$KERNEL_TYPE_INPUT" ]]; then
    mkinitcpio -p $KERNEL_TYPE_INPUT
else
    mkinitcpio -p linux
fi

# Create grub config
echo -e "Making GRUB CONFIG \n"
grub-mkconfig -o /boot/grub/grub.cfg

echo "Chroot jobs Done!"


