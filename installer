#!/usr/bin/env bash
clear
# Define colors
# Reset
Color_Off='\033[0m'       # Text Reset
# Regular Colors
Red='\033[0;31m'          # Red
Green='\033[0;32m'        # Green
Yellow='\033[0;33m'       # Yellow
Blue='\033[0;34m'         # Blue
White='\033[0;37m'        # White

# Archx ascii art
echo -e """${Blue} 
                 █████████                     █████                
                ███▒▒▒▒▒███                    ▒▒███                 
               ▒███    ▒███  ████████   ██████  ▒███████   █████ █████
               ▒███████████ ▒▒███▒▒██ ████▒▒███ ▒███▒▒███ ▒▒███ ▒▒███ 
               ▒███▒▒▒▒▒███  ▒███ ▒▒▒ ▒███ ▒▒▒  ▒███ ▒███  ▒▒▒█████▒  
               ▒███    ▒███  ▒███     ▒███  ███ ▒███ ▒███   ███▒▒▒███ 
               █████   █████ █████    ▒▒██████  ████ █████ █████ █████
              ▒▒▒▒▒   ▒▒▒▒▒▒ ▒▒▒▒      ▒▒▒▒▒▒  ▒▒▒▒ ▒▒▒▒▒▒ ▒▒▒▒ ▒▒▒▒▒ 

${Color_Off}
"""

# Check internet connection : for offline installation
if [[ ! $( ping -c 3 8.8.8.8 2> /dev/null ) ]]; then

    echo  -e "${Green}Starting offline installation \n"
    sleep 3
    else
      echo -e "${Red}Internet Connection detected ! exiting...\n"
      exit
fi 

# Create pacman-cache directory and change directory to there
mkdir -p /mnt/var/cache/pacman/pkg/ && cd /mnt/var/cache/pacman/pkg/
clear

echo -e "${Yellow}You are here :${Green} `pwd` "

# Recreate live system packages with bacman
read -p "$(echo -e "${White}The whole system packages will be recreate! proceed?[y/N]: ")" Answer_Package_Recreate

case "$Answer_Package_Recreate" in
	
	"y"|"yes"|"Yes"|"YES"|"Y")
        for package in $(pacman -Qq); do 
          bacman $package 
        done
		;;

	*) 
		echoi -e "${Red}No package will be recreate!..."
		exit
		;;
esac

# Remove corrupted packages
rm -f *.part

# Change directory to ~/
clear
cd
echo -e "${Green}Process completed!${Yellow}You are here : ${Green}`pwd` ${Color_Off} \n" 

# Pacstrap packages without installation (just for creating the base system directories...)
echo -e "${Green} Installing packages to /mnt${Color_Off}"
pacstrap /mnt base 

# Create boot directory in new system
mkdir -m 755 -p /mnt/boot

# Copy vmlinuz-linux from live system  to new system 
cp -avT /run/archiso/bootmnt/arch/boot/$(uname -m)/vmlinuz /mnt/boot/vmlinuz-linux

# Start Offline package installation to /mnt
pacman -r /mnt -U /mnt/var/cache/pacman/pkg/* --noconfirm --force --needed 2> /dev/null

# Change root directory permissions
chmod 700 /mnt/root

clear

# Generate FSTAB via devices uuid : you can edit it in /etc/fstab
genfstab -U -p /mnt >> /mnt/etc/fstab && cat /mnt/etc/fstab

# Add pacaur_installer script in : /mnt/opt/user_bin/pacaur_installer
echo -e "${Yellow}Creating pacaur_installer script in /mnt/opt/user_bin for install aur: ${Color_Off}\n"
mkdir -p /mnt/opt/user_bin
touch /mnt/opt/user_bin/pacaur_installer && chmod +x /mnt/opt/user_bin/pacaur_installer

tee -a /mnt/opt/user_bin/pacaur_installer << END
#!/usr/bin/env bash
if ! command -v pacaur >/dev/null; then
    tmp=$(mktemp -d)
    function finish {
        rm -rf "$tmp"
    }
    trap finish EXIT
    
    pushd $tmp
    sudo pacman -Syu && sudo pacman -S base-devel --needed
    for pkg in cower pacaur; do
        curl -o PKGBUILD https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=$pkg && \
            makepkg --needed --noconfirm --skippgpcheck -sri
    done
    popd

    if ! command -v pacaur >/dev/null; then
        >&2 echo "Pacaur wasn't successfully installed"
        exit 1
    fi
fi
END

# Change root to the new installed system in /mnt
clear

arch-chroot /mnt
